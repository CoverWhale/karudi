CREATE VIEW if not exists solartis_wip_submissions.drivers AS (
    SELECT 
        JSONExtractString(json, 'SubmissionNumber') AS SubmissionNumber,
        JSONExtractString(json, 'QuoteNumber') AS QuoteNumber,
        JSONExtractString(json, 'PolicyNumber') AS PolicyNumber,
        JSONExtractString(json, 'PolicySubNumber') AS PolicySubNumber,
        JSONExtractString(json, 'EndorsementNumber') AS EndorsementNumber,
        JSONExtractString(driver, 'DriverAgeFactor') AS DriverAgeFactor,
        JSONExtractString(driver, 'DriverViolationFactor') AS DriverViolationFactor,
        JSONExtractString(driver, 'DriverCrashesFactor') AS DriverCrashesFactor,
        JSONExtractString(driver, 'DriverAgeCount') AS DriverAgeCount,
        JSONExtractString(driver, 'LicenseClass') AS LicenseClass,
        JSONExtractString(driver, 'DriverExperienceCount') AS DriverExperienceCount,
        JSONExtractString(driver, 'DriverViolationCount') AS DriverViolationCount,
        JSONExtractString(driver, 'DriverCrashesCount') AS DriverCrashesCount,
        JSONExtractString(driver, 'DriverClassCount') AS DriverClassCount,
        JSONExtractString(driver, 'DriverAgePointsCount') AS DriverAgePointsCount,
        JSONExtractString(driver, 'ScheduleDriver') AS ScheduleDriver,
        JSONExtractString(driver, 'Age') AS Age,
        JSONExtractString(driver, 'AgeRange') AS AgeRange,
        JSONExtractString(driver, 'Points') AS Points,
        JSONExtractString(driver, 'FirstName1') AS FirstName1,
        JSONExtractString(driver, 'LastName2') AS LastName2,
        JSONExtractString(driver, 'DOB') AS DOB,
        JSONExtractString(driver, 'LicenseNumber') AS LicenseNumber,
        JSONExtractString(driver, 'State') AS State,
        JSONExtractString(driver, 'HireDate') AS HireDate,
        JSONExtractString(driver, 'DriverClassFactor') AS DriverClassFactor,
        JSONExtractString(driver, 'DriverExperienceFactor') AS DriverExperienceFactor,
        JSONExtractString(driver, 'Experience') AS Experience,
        JSONExtractString(driver, 'Accidents') AS Accidents,
        JSONExtractString(driver, 'Violations') AS Violations,
        JSONExtractString(driver, 'Suspension') AS Suspension,
        JSONExtractString(driver, 'CriticalViolation') AS CriticalViolation,
        JSONExtractString(driver, 'TotalSuspensionViolationAccident') AS TotalSuspensionViolationAccident,
        JSONExtractString(driver, 'BIPDDriverExperienceFactor') AS BIPDDriverExperienceFactor,
        JSONExtractString(driver, 'UMBIDriverExperienceFactor') AS UMBIDriverExperienceFactor,
        JSONExtractString(driver, 'UMPDDriverExperienceFactor') AS UMPDDriverExperienceFactor,
        JSONExtractString(driver, 'UIMBIDriverExperienceFactor') AS UIMBIDriverExperienceFactor,
        JSONExtractString(driver, 'MedPayDriverExperienceFactor') AS MedPayDriverExperienceFactor,
        JSONExtractString(driver, 'PIPDriverExperienceFactor') AS PIPDriverExperienceFactor,
        JSONExtractString(driver, 'BIPDDriverAgeFactor') AS BIPDDriverAgeFactor,
        JSONExtractString(driver, 'BIPDDriverClassFactor') AS BIPDDriverClassFactor,
        JSONExtractString(driver, 'MedPayDriverClassFactor') AS MedPayDriverClassFactor,
        JSONExtractString(driver, 'PIPDriverClassFactor') AS PIPDriverClassFactor,
        JSONExtractString(driver, 'BIPDViolationFactor') AS BIPDViolationFactor,
        JSONExtractString(driver, 'BIPDAccidentFactor') AS BIPDAccidentFactor,
        JSONExtractString(driver, 'MedPayDriverAgePointsFactor') AS MedPayDriverAgePointsFactor,
        JSONExtractString(driver, 'MajorViolations') AS MajorViolations,
        JSONExtractString(driver, 'DriverStatus') AS DriverStatus,
        JSONExtractString(driver, 'NonMovingViolations') AS NonMovingViolations,
        JSONExtractString(driver, 'DriverHistory') AS DriverHistory,
        JSONExtractString(driver, 'BIPDDriverAgePointsFactor') AS BIPDDriverAgePointsFactor,
        JSONExtractString(driver, 'DriverAgeBracket') AS DriverAgeBracket,
        JSONExtractString(driver, 'UMUIMDriverExperienceFactor') AS UMUIMDriverExperienceFactor,
        JSONExtractString(driver, 'BIPDDriverViolationFactor') AS BIPDDriverViolationFactor,
        JSONExtractString(driver, 'NumberOfMinorViolation') AS NumberOfMinorViolation,
        JSONExtractString(driver, 'NumberOfMajorViolation') AS NumberOfMajorViolation,
        JSONExtractString(driver, 'NumberOfSuspension') AS NumberOfSuspension,
        JSONExtractString(driver, 'NumberOfAccidents') AS NumberOfAccidents,
        JSONExtractString(driver, 'NumberOfNonMovingViolation') AS NumberOfNonMovingViolation,
        JSONExtractString(driver, 'StateLicenseNumber') AS StateLicenseNumber,
        JSONExtractString(driver, 'Details') AS Details,
        JSONExtractString(driver, 'Report') AS Report,
        JSONExtractString(driver, 'DriverScheduleAVDCode') AS DriverScheduleAVDCode,
        JSONExtractString(driver, 'DriverScheduleDescription') AS DriverScheduleDescription,
        JSONExtractString(driver, 'DriverScheduleDate') AS DriverScheduleDate,
        JSONExtractString(driver, 'DriverScheduleCoverageStartDate') AS DriverScheduleCoverageStartDate,
        JSONExtractString(driver, 'DriverScheduleChangeEffectiveDate') AS DriverScheduleChangeEffectiveDate,
        JSONExtractString(driver, 'DriverScheduleCoverageStopDate') AS DriverScheduleCoverageStopDate,
        JSONExtractString(driver, 'DriverScheduleWrittenPremium') AS DriverScheduleWrittenPremium,
        JSONExtractString(driver, 'DriverSchedulePriorChargedPremium') AS DriverSchedulePriorChargedPremium,
        JSONExtractString(driver, 'DriverScheduleChangeType') AS DriverScheduleChangeType,
        JSONExtractString(driver, 'DriverScheduleWaivedOffPremium') AS DriverScheduleWaivedOffPremium,
        JSONExtractString(driver, 'DriverScheduleTotalWaivedOffPremium') AS DriverScheduleTotalWaivedOffPremium,
        JSONExtractString(driver, 'DriverType') AS DriverType,
        JSONExtractString(driver, 'DriverScheduleMVROverride') AS DriverScheduleMVROverride,
        JSONExtractString(driver, 'ReportedDate') AS ReportedDate,
        JSONExtractString(driver, 'mvr_violations') AS mvr_violations,
        JSONExtractString(driver, 'mvr_majorviolations') AS mvr_majorviolations,
        JSONExtractString(driver, 'mvr_criticalviolation') AS mvr_criticalviolation,
        JSONExtractString(driver, 'mvr_suspension') AS mvr_suspension,
        JSONExtractString(driver, 'mvr_nonmovingviolations') AS mvr_nonmovingviolations,
        JSONExtractString(driver, 'mvr_accidents') AS mvr_accidents,
        JSONExtractString(driver, 'AgentReportedViolations') AS AgentReportedViolations,
        JSONExtractString(driver, 'AgentReportedAccidents') AS AgentReportedAccidents,
        JSONExtractString(driver, 'AgentReportedCriticalViolations') AS AgentReportedCriticalViolations,
        JSONExtractString(driver, 'AgentReportedSuspensions') AS AgentReportedSuspensions,
        JSONExtractString(driver, 'AgentReportedMajorViolations') AS AgentReportedMajorViolations,
        JSONExtractString(driver, 'AgentReportedNonMovingViolations') AS AgentReportedNonMovingViolations,
        JSONExtractString(driver, 'CommercialAutomobileDriverScheduleDriverEligibility') AS CommercialAutomobileDriverScheduleDriverEligibility,
        JSONExtractString(driver, 'CommercialAutomobileDriverScheduleMinorViolations') AS CommercialAutomobileDriverScheduleMinorViolations,
        JSONExtractString(driver, 'CommercialAutomobileDriverScheduleTotalViolationAccident') AS CommercialAutomobileDriverScheduleTotalViolationAccident
    FROM solartis_wip_submissions.raw_submissions
    ARRAY JOIN JSONExtractArrayRaw(JSONExtractRaw(json, 'Account'), 'Insured') AS insured
    ARRAY JOIN JSONExtractArrayRaw(JSONExtractRaw(insured, 'CommercialAutomobile'), 'DriverSchedule') AS driver
);
